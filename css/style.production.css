/*
* Prefixed by https://autoprefixer.github.io
* PostCSS: v8.3.6,
* Autoprefixer: v10.3.1
* Browsers: last 4 version
*/

/*
Example comment.
Dark Grey: #2b2b2b
Purple: #357b70

UVA Orange: #F84C1E
UVA Blue: #232D4B
*/

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  font-family: 'Crimson Pro', sans-serif;
  font-weight: 200;

  /* Set font size to 16 px */
  font-size: 20px;

  /* Set height of lines to 1.6 */
  line-height: 1.6;
  background-color: #f84c1e;
  color: #fff;
}

.page-header {
  /*
  NOTE This code would make it stick with the user as they scroll.
  I like that idea, but it's not what the task wants right now.
  I also wouldn't know how to make the menubar look right this way.

  display: block;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  padding: 20px;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;

  /* Aesthetic-only additions */
  background-color: #232d4b;
  border-bottom: 4px solid black;
}

/*
.page-header__item {
  flex: 0 1 200px;
}
*/

.page-header__item:last-child {
  /* flex-grow: 1; */
  text-align: right;
}

#header__logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-item-align: center;
      -ms-grid-row-align: center;
      align-self: center;
  max-width: 150px;
  width: 33%;
  height: auto;
}

.navigation_list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

main {
  max-width: 600px;
  margin: 0 auto;
}

/* Currently redundant, but I want to play around with this seperately */
main.profile {
  max-width: 600px;
  margin: 0 auto;
  text-align: center;
}

main {
  text-align: center;
  padding: 10px;
}

form {
  text-align: left;
  padding: 6px;
}

.skills-table {
  display: inline-block;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/* Attempting to get Responsive SVG with Animations,
may need to go for static SVG to be responsive */

.svg-container {
  display: block;
  max-width: 700px;
  margin: auto;
  background-color: white;
  border: 2px solid black;
}

/*
.svg-container {
  display: inline-block;
  position: relative;
  width: 100%;
  max-width: 700px;
  max-height: 505px;
  padding-bottom: 72.15%;
  vertical-align: middle;
  overflow: hidden;
}

.svg-content {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  background-color: white;
  border-top: 2px solid black;
  border-bottom: 2px solid black;
}
*/
@-webkit-keyframes color-change {
  0% {
    fill: #edc655;
  }

  50% {
    fill: #fcffad;
  }

  100% {
    fill: #f76414;
  }
}
@keyframes color-change {
  0% {
    fill: #edc655;
  }

  50% {
    fill: #fcffad;
  }

  100% {
    fill: #f76414;
  }
}

.sun {
  -webkit-animation: 4s color-change infinite alternate linear;
          animation: 4s color-change infinite alternate linear;
}

@-webkit-keyframes cloud-move {
  from {
    -webkit-transform: translate(0, 50px);
            transform: translate(0, 50px);
  }

  to {
    -webkit-transform: translate(200px, 50px);
            transform: translate(200px, 50px);
  }
}

@keyframes cloud-move {
  from {
    -webkit-transform: translate(0, 50px);
            transform: translate(0, 50px);
  }

  to {
    -webkit-transform: translate(200px, 50px);
            transform: translate(200px, 50px);
  }
}

.cloud-front {
  -webkit-animation: 30s cloud-move infinite alternate linear;
          animation: 30s cloud-move infinite alternate linear;
}

@-webkit-keyframes cloud-move-reverse {
  from {
    -webkit-transform: translate(446px, 48px);
            transform: translate(446px, 48px);
  }

  to {
    -webkit-transform: translate(100px, 48px);
            transform: translate(100px, 48px);
  }
}

@keyframes cloud-move-reverse {
  from {
    -webkit-transform: translate(446px, 48px);
            transform: translate(446px, 48px);
  }

  to {
    -webkit-transform: translate(100px, 48px);
            transform: translate(100px, 48px);
  }
}

.cloud-back {
  -webkit-animation: 34s cloud-move-reverse infinite alternate linear;
          animation: 34s cloud-move-reverse infinite alternate linear;
}

img.profile__portrait {
  float: left;
  width: 250px;
  height: auto;
  margin-right: 40px;
  border-radius: 50%;
  border: 2px solid black;
}

footer.page-footer {
  clear: both;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  text-align: center;
}

h1 {
  font-size: 30px;
  font-weight: 700;
  font-variant: small-caps;
  text-align: center;
}

/*
Link handlings below
NOTE that to function the order MUST be:
visited
hover
active
*/
a {
  font-weight: 700;
  color: #232d4b;
}

a:visited {
  /* Applies to links that have been previously visited */
  color: #232d4b;
}

a:hover,
a:focus {
  /*
  Prevents underlining when hovering on a link.
  Focus applies to when a link is selected via the keyboard instead of mouse.
  */
  text-decoration: none;
}

a:active {
  /* Applies to links being currently activated */
  color: #489c79;
}

a.navigation-list__item--active {
  text-decoration: none;
  color: #f84c1e;
}

/*
For some reason an a is required before this class in order to make this
function on the site. I don't understand why the a is necessary if class
statments are more specific and this is after my link formatting.

Answer: The 'a:visisted' section above was being considered as more specific.
*/
a.navigation-list__item {
  color: #f84c1e;
}

a.navigation-list__item:active {
  /* Applies to links being currently activated */
  color: #489c79;
}

.paragraph__link {
  font-weight: 700;
}

/* Table stylings handled here */
table,
th,
td {
  border: 1px solid white;
  border-collapse: collapse;
}

th {
  text-align: center;
}

th,
td {
  padding: 5px;
}

/* Button handlings below */
button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: inline-block;

  /* takes the font from the outer container */
  font-family: inherit;

  /*
  styles the background color, font color, and text decoration (underline, etc.)
  of the button
  */
  background-color: #357b70;
  color: white;
  text-decoration: none;

  /* adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px;

  /*
  gives the button a bottom border with a width of 2px, a type of solid,
  and a color in RGBA format
  */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);

  /* Transitions should alwaus be applied to the base state of an element.
  Variants will look to the base state and find the transition */
  -webkit-transition: 0.9s opacity;
  -o-transition: 0.9s opacity;
  transition: 0.9s opacity;
}
.button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: inline-block;

  /* takes the font from the outer container */
  font-family: inherit;

  /*
  styles the background color, font color, and text decoration (underline, etc.)
  of the button
  */
  background-color: #357b70;
  color: white;
  text-decoration: none;

  /* adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px;

  /*
  gives the button a bottom border with a width of 2px, a type of solid,
  and a color in RGBA format
  */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);

  /* Transitions should alwaus be applied to the base state of an element.
  Variants will look to the base state and find the transition */
  -webkit-transition: 0.9s opacity;
  -o-transition: 0.9s opacity;
  transition: 0.9s opacity;
}

.form-required {
  font-weight: 700;
  text-align: left;
}

#contact-email,
#contact-tel,
#contact-message {
  display: inline-block;
}

#submit {
  display: inline-block;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-transition: 0.9s opacity;
  -o-transition: 0.9s opacity;
  transition: 0.9s opacity;
}

#submit:hover,
#submit:focus {
  cursor: pointer;
  opacity: 0.8;
}

/*
button:hover,
button:focus,
.button:hover,
.button:focus {
  Change mouse to a hand on hover
  cursor: pointer;

  reduce opacity of button to 80% on hover
  opacity: 0.8;
}

button.button__secondary {
  background-color: var(--button-secondary-background-color);
  color: var(--button-secondary-background-text-color);
} */

/* start grid fallback */
.grid__item {
  display: inline-block;
  width: 33%;
  background-color: #232d4b;
  border: 2px solid black;
}

/* end grid fallback */

@supports (display:grid) {
  .grid {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: 1fr 20px 1fr 20px 1fr;
    grid-template-columns: 1fr 1fr 1fr;

    /*
    The following line is not necessary as the number of rows will grow
    automatically as content is added.

    grid-template-rows: 300px 300px;
    */
    grid-gap: 20px;
    margin: 20px;
  }

  .grid__item {
    width: auto;
    min-height: auto;
    margin: 20px;
    text-align: center;
    color: #fff;
    border: 2px solid black;
    padding: 10px;
  }

  a.grid__item-link {
    color: #f84c1e;
  }
}

/*
Make links to social media light up on hover

Hoping to eventually make it so that the black and white SVGs I have now are
replaced with full color versions upon hover.

Cool way to try making the link fancier!
background: url("https://abs.twimg.com/favicons/twitter.ico");
*/

img.twitter-logo:hover,
img.twitter-logo:focus {
  /* position: relative; */
  opacity: 0.8;
}

/*
span.social-media-color {
  display: inline;
  position: relative;
  top: -39px;
}
 */
img.facebook-logo:hover,
img.facebook-logo:focus {
  opacity: 0.8;
}

img.instagram-logo:hover,
img.instagram-logo:focus {
  opacity: 0.8;
}

/*
Reformatting code for devices with widths less than 750px or less than 500px.
Smaller header font, grid turned single column (750px at two columns).
Grid space between objects also lowered.
*/
@media all and (max-width: 500px) {
  .grid {
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
  }

  ul {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap;
    -webkit-box-flex: 1;
        -ms-flex: 1 1 200px;
            flex: 1 1 200px;
    -webkit-box-pack: safe right;
        -ms-flex-pack: safe right;
            justify-content: safe right;
  }

  img.profile__portrait {
    float: none;
    margin: 5px;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    -ms-grid-columns: 1fr 20px 1fr;
    grid-template-columns: 1fr 1fr;
  }

  ul {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap;
    -webkit-box-flex: 1;
        -ms-flex: 1 1 200px;
            flex: 1 1 200px;
    -webkit-box-pack: safe right;
        -ms-flex-pack: safe right;
            justify-content: safe right;
  }

  img.profile__portrait {
    float: none;
    margin: 5px;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }

  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }

  h1 {
    font-size: 22px;
  }

  body {
    font-size: 16px;
  }
}
